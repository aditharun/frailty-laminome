install.packages("aws.s3")
library(tidyverse)
library(aws.s3)
install.packages("tidyverse")
r <- function(x){if(x==2){break} "yes"}
r <- function(x){if(x==2){break} a <- "yes"}
r <- function(x){
if (x==2){
break
}
"yes"
}
r
for (j in 1:5){r(j)}
for (j in 1:5){
r(j)
}
r <- function(x){
if (x==2){next}
"yes"
}
for (j in 1:5){r(j)}
r <- function(x){
if (x==2){return}
"yes"
}
for (j in 1:5){r(j)}
for (j in 1:5){
print(j)
}
for (j in 1:5){
r(j)
}
r <- function(x){
if (x==2){return}
return("yes")
}
for (j in 1:5){r(j)}
r <- function(x){
if (x==2){
return()
}
return("yes")
}
for (j in 1:5){
r(j)
}
r <- function(x){
if (x==2){
return()
}
return("yes")
}
for (j in 1:5){
print(r(j))
}
install.packages("islr2")
install.packages("ISLR2")
library(tidyverse)
library(aws.s3)
awshelp()
awshelp()
awshelp()
awshelp()
mod(4, 6)
L <- c(1)
tail(L, 1)
L <- c(4,5,6)
tail(L, 1)
tail(L, 2)
tail(tail(L, 2), 1)
head(tail(L, 2), 1)
M_init <- -4
Z <- 2
L_init <- 0
L <- c(L_init)
M <- c(M_init)
x <- 0
while (tail(M, 1) < tail(L, 1)){
x <- x + 1
if ((x %% 6 == 0)|(x %% 7 == 0)){
L <- c(L, tail(L, 1))
} else{
L <- c(L, tail(L, 1) + 1)
}
M <- c(M, (M[1] + x*Z) )
}
xz
x
L
M
M_init <- -13
Z <- 3
L_init <- 0
L <- c(L_init)
M <- c(M_init)
x <- 0
while (tail(M, 1) < tail(L, 1)){
x <- x + 1
if ((x %% 6 == 0)|(x %% 7 == 0)){
L <- c(L, tail(L, 1))
} else{
L <- c(L, tail(L, 1) + 1)
}
M <- c(M, (M[1] + x*Z) )
}
x
M_init
L
setwd("~/Documents/GitHub/frailty-laminome/results/interactive/")
library(shiny)
runApp("app.R")
setwd("..")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
runApp("interactive")
library(rsconnect)
install.packages("rsconnect")
library(rsconnect)
library(rsconnect)
library(rsconnect)
library(rsconnect)
rsconnect::setAccountInfo(name='aditharun',
token='2F73E50C20C4109E3092CDF41FC7C0D3',
secret='0/+e9s4fZSVlwOYVjMMWmmsJa0+1k9DHl3XYeUDu')
setwd("frai")
setwd("frailty-laminome-interactive-volcano-plots/")
deployApp()
